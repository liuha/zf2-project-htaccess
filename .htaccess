##
# .htaccess for Zend Framework 2 (ZF2) projects
#
# This allows the ZF2 project to work whether it is placed in the web root or in a subfolder.
#
# In the original Zend Skeleton Application, .htaccess and index.php are placed in the public/ directory of the project
# which requires the setting up of a virtual host to point to the public/ directory.
# This is not feasible for projects on shared hosting with no access to the Apache config (typically httpd.conf)
# which means the project can only be accessed via http://example.com/project/public.
#
# .htaccess and index.php have been moved up to the main project folder and modified accordingly.
# Links to resources such as CSS in view scripts should now use $this->basePath('public/css/style.css')
# instead of $this->basePath('css/style.css').
#
# @see     https://github.com/zendframework/ZendSkeletonApplication
# @link    https://github.com/zionsg/zf2-project-htaccess for canonical source repository
# @author  Zion Ng <zion@intzone.com>
# @since   2015-02-23T15:30+08:00
# @version 2015-02-23T17:30+08:00
##

# Enable mod_rewrite
RewriteEngine On

# Store current folder as base path in BASE environment variable - to use, %{ENV:BASE}
# BASE = / if this .htaccess is in the web root, BASE = /subfolder/ if it is in a subfolder
# Using http://example.com/project/a/b as example with this .htaccess in /project/ (making /project/ the current folder)
#   - request uri is /project/a/b
#   - 1st group in RewriteRule is a/b (Apache removes the filesystem prefix including current folder hence no /project/)
#   - the $1 in the RewriteCond is a backreference to the 1st group in the RewriteRule
#   - the RewriteCond expands to "RewriteCond /project/a/b::a/b ^(/.+)(a/b)::a/b" giving /project/ for %1 in RewriteRule
RewriteCond %{REQUEST_URI}::$1 ^(/.*)(.*)::\2$
RewriteRule ^(.*) - [E=BASE:%1]

# Rewrite all queries to index.php (except itself and files inside the public/ directory of the project).
# The base path is prepended in RewriteRule to allow proper resolution of the index.php file whether Apache aliases
# are used to do mass virtual hosting or using a non-aliased environment, providing a safe, one-size fits all solution.
#
# Note that for "RewriteCond TestString CondPattern", server/environment variables cannot be used in CondPattern unless
# TestString is set to the special value "expr" in which case CondPattern will be treated as an ap_expr.
RewriteCond expr "! %{REQUEST_URI} -strcmatch '%{ENV:BASE}index.php'"
RewriteCond expr "! %{REQUEST_URI} -strcmatch '%{ENV:BASE}public/*'"
RewriteRule ^(.*)$ %{ENV:BASE}index.php [NC,L]
